{"version":3,"file":"static/js/272.b22c1024.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/selectors.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ContactForm/ContactForm.jsx","components/Section/Section.stylde.jsx","components/Section/Section.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const Label = styled.label`\n  font-weight: 600;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const FormStyle = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  gap: 25px;\n  text-shadow: -2px -2px 5px #fff, 2px 2px 5px #babecc;\n`;\nexport const FieldStyle = styled(Field)`\n  color: #61677c;\n  font-weight: 600;\n  font-family: 'Montserrat', sans-serif;\n  text-shadow: inset 1px 1px 2px #babecc, inset -1px -1px 2px #fff;\n  font-weight: bold;\n  letter-spacing: -0.2px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n  max-width: 500px;\n  box-sizing: border-box;\n  transition: all 0.2s ease-in-out;\n  -moz-appearance: none;\n  appearance: none;\n  -webkit-appearance: none;\n  border: 0;\n  outline: 0;\n  font-size: 16px;\n  border-radius: 320px;\n  padding: 12px;\n  background-color: #ebecf0;\n\n  &:focus {\n    box-shadow: inset 1px 1px 2px #babecc, inset -1px -1px 2px #fff;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  width: 150px;\n  height: 16px;\n  border-radius: 8px;\n  line-height: 0;\n  margin: auto;\n  font-size: 19.2px;\n  border: 0;\n  outline: 0;\n  font-size: 16px;\n  border-radius: 320px;\n  padding: 16px;\n  background-color: #ebecf0;\n  text-shadow: 1px 1px 0 #fff;\n  color: #61677c;\n  font-weight: bold;\n  box-shadow: -5px -5px 20px #fff, 5px 5px 20px #babecc;\n  transition: all 0.2s ease-in-out;\n  cursor: pointer;\n  font-weight: 600;\n  &:hover {\n    box-shadow: -2px -2px 5px #fff, 2px 2px 5px #babecc;\n  }\n  &:active {\n    box-shadow: inset 1px 1px 2px #babecc, inset -1px -1px 2px #fff;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\nexport const selectFilterValue = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  ({ items }, filterValue) => {\n    const normalizedFilter = filterValue.toLowerCase();\n    const filterContacts = items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n    return filterContacts;\n  }\n);\n","import styled from 'styled-components';\n\nexport const LoaderStyle = styled.div`\n  height: 16px;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { Container } from 'style/Global.styled';\nimport { LoaderStyle } from './Loader.styled';\n\nexport const LoaderМount = () => {\n  return (\n    <Container>\n      <RotatingLines\n        strokeColor=\"#61677c\"\n        strokeWidth=\"3\"\n        animationDuration=\"0.75\"\n        width=\"90\"\n        visible={true}\n      />\n    </Container>\n  );\n};\n\nexport const Loader = () => {\n  return (\n    <LoaderStyle>\n      <RotatingLines\n        strokeColor=\"#61677c\"\n        strokeWidth=\"3\"\n        animationDuration=\"0.75\"\n        width=\"16\"\n        visible={true}\n      />\n    </LoaderStyle>\n  );\n};\n","import { Formik } from 'formik';\nimport { FormStyle, FieldStyle, Label, Button } from './ContactForm.styled';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport { Loader } from '../Loader/Loader';\nimport toast from 'react-hot-toast';\n\nconst initialValue = {\n  name: '',\n  number: '',\n};\n\nlet schema = yup.object().shape({\n  name: yup\n    .string()\n    .required('Name may contain only letters, apostrophe, dash and spaces.'),\n  number: yup\n    .number()\n    .required(\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .positive()\n    .integer(),\n});\n\nexport const ContactForm = () => {\n  const { items, isLoadingAdd, error } = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const handleSubmit = async (value, { resetForm }) => {\n    let isName = false;\n    if (items && items.length > 0) {\n      items.forEach(({ name }) => {\n        if (value.name.toLowerCase() === name.toLowerCase()) {\n          isName = true;\n        }\n      });\n    }\n    switch (true) {\n      case isName:\n        alert(`${value.name} is already in contacts`);\n        break;\n      case !isName && !error:\n        try {\n          await dispatch(addContact(value));\n          resetForm();\n          toast.success('Contact added!');\n        } catch (error) {}\n        break;\n      default:\n        toast.error('Connection error, please try again later!');\n        break;\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValue}\n      validationScheme={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormStyle>\n        <Label htmlFor=\"name\">\n          Name\n          <FieldStyle\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label htmlFor=\"number\">\n          Number\n          <FieldStyle\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add contact{isLoadingAdd && <Loader />}</Button>\n      </FormStyle>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-family: 'Montserrat', sans-serif;\n  letter-spacing: -0.2px;\n  font-size: 25px;\n  text-shadow: -2px -2px 5px #fff, 2px 2px 5px #babecc;\n  padding-bottom: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Section.stylde';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <div>\n      <Title>{title}</Title>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Contact = styled.p`\n  font-family: 'Montserrat', sans-serif;\n  letter-spacing: -0.2px;\n  font-size: 16px;\n  text-shadow: -2px -2px 5px #fff, 2px 2px 5px #babecc;\n  font-weight: 600;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  width: 100px;\n  height: 16px;\n  border-radius: 8px;\n  line-height: 0;\n  font-size: 19.2px;\n  border: 0;\n  outline: 0;\n  font-size: 16px;\n  border-radius: 320px;\n  padding: 16px;\n  background-color: #ebecf0;\n  text-shadow: 1px 1px 0 #fff;\n  color: #ae1100;\n  font-weight: bold;\n  box-shadow: -5px -5px 20px #fff, 5px 5px 20px #babecc;\n  transition: all 0.2s ease-in-out;\n  cursor: pointer;\n  font-weight: 600;\n  &:hover {\n    box-shadow: -2px -2px 5px #fff, 2px 2px 5px #babecc;\n  }\n  &:active {\n    box-shadow: inset 1px 1px 2px #babecc, inset -1px -1px 2px #fff;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport { Contact, Button } from './ContactItem.styled';\nimport { Loader } from '../Loader/Loader';\nimport toast from 'react-hot-toast';\nimport PropTypes from 'prop-types';\n\nexport const ContactItem = ({ contact: { id, name, phone } }) => {\n  const dispatch = useDispatch();\n  const { isLoadingDelete } = useSelector(selectContacts);\n\n  const [isDeleting, setIsDeleting] = useState(null);\n\n  const handleDelete = id => {\n    setIsDeleting(id);\n    dispatch(deleteContact(id)) &&\n      toast('Contact deleted!', {\n        icon: '🤦‍♂️',\n      });\n  };\n\n  return (\n    <>\n      <Contact>\n        {name}: {phone}\n      </Contact>\n      <Button type=\"button\" onClick={() => handleDelete(id)}>\n        Delete\n        {isLoadingDelete && isDeleting === id && <Loader />}\n      </Button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const ContactListStyle = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const ContacStyle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { ContactListStyle, ContacStyle } from './ContactList.styled';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ContactListStyle>\n      {contacts.map(contact => (\n        <ContacStyle key={contact.id}>\n          <ContactItem contact={contact} />\n        </ContacStyle>\n      ))}\n    </ContactListStyle>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const InpuStyle = styled.input`\n  color: #61677c;\n  font-weight: 600;\n  font-family: 'Montserrat', sans-serif;\n  text-shadow: inset 1px 1px 2px #babecc, inset -1px -1px 2px #fff;\n  font-weight: bold;\n  letter-spacing: -0.2px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n  width: 200px;\n  box-sizing: border-box;\n  transition: all 0.2s ease-in-out;\n  -moz-appearance: none;\n  appearance: none;\n  -webkit-appearance: none;\n  border: 0;\n  outline: 0;\n  font-size: 16px;\n  border-radius: 320px;\n  padding: 8px;\n  background-color: #ebecf0;\n\n  &:focus {\n    box-shadow: inset 1px 1px 2px #babecc, inset -1px -1px 2px #fff;\n  }\n`;\n\nexport const FilterBox = styled.div`\n  margin-bottom: 15px;\n  border-radius: 5px;\n  padding: 10px;\n  background: #e0e0e0;\n  box-shadow: 20px 20px 60px #bebebe, -20px -20px 60px #ffffff;\n`;\n","import { Label, InpuStyle, FilterBox } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/itemsSlice/filterSlice.js';\nimport { selectFilterValue } from 'redux/selectors.js';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilterValue);\n  return (\n    <FilterBox>\n      <Label>\n        Enter contact name\n        <InpuStyle\n          type=\"text\"\n          value={filterValue}\n          onChange={e => dispatch(filterContacts(e.currentTarget.value))}\n        />\n      </Label>\n    </FilterBox>\n  );\n};\n","import { Container } from '../../style/Global.styled';\nimport { useEffect } from 'react';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Section } from '../../components/Section/Section';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\nimport { LoaderМount } from '../../components/Loader/Loader';\nimport { Toaster } from 'react-hot-toast';\n\nconst Contacts = () => {\n  const { items, isLoading, error } = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Section title={'Phonebook'}>\n        <ContactForm />\n      </Section>\n      <Section title={'Contacts'}>\n        <Filter />\n        {isLoading && <LoaderМount />}\n        {error && <div>Sorry, something went wrong :( Please try again</div>}\n        {items.length > 0 && !isLoading && <ContactList />}\n        {!isLoading && items.length === 0 && <>You haven't any contacts yet</>}\n      </Section>\n      <Toaster position=\"bottom-right\" reverseOrder={false} />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Label","styled","FormStyle","Form","FieldStyle","Field","Button","selectContacts","state","contacts","selectFilterValue","filter","selectVisibleContacts","createSelector","filterValue","items","normalizedFilter","toLowerCase","name","includes","LoaderStyle","LoaderМount","strokeColor","strokeWidth","animationDuration","width","visible","Loader","initialValue","number","schema","yup","shape","required","positive","integer","ContactForm","useSelector","isLoadingAdd","error","dispatch","useDispatch","handleSubmit","value","resetForm","isName","length","forEach","alert","addContact","toast","initialValues","validationScheme","onSubmit","htmlFor","type","pattern","title","Title","Section","children","Contact","ContactItem","contact","id","phone","isLoadingDelete","useState","isDeleting","setIsDeleting","onClick","deleteContact","icon","handleDelete","ContactListStyle","ContacStyle","ContactList","map","InpuStyle","FilterBox","Filter","onChange","e","filterContacts","currentTarget","isLoading","useEffect","fetchContacts","position","reverseOrder"],"sourceRoot":""}